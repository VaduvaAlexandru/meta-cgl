This README file contains information on the contents of the cgl layer.
Please see the corresponding sections below for details.


Dependencies
============

This layer depends on:

  URI: git://git.yoctoproject.org/poky
  branch: master

  URI: git://git.openembedded.org/meta-openembedded
  layers: meta-oe, meta-perl, meta-networking, meta-filesystems
  branch: master

  URI: git://git.yoctoproject.org/meta-cloud-services
  layers: meta-openstack
  branch: master

  URI: git://git.yoctoproject.org/meta-qt3
  branch: master

  URI: https://github.com/joaohf/meta-openclovis
  branch: master

  URI: git://git.yoctoproject.org/meta-selinux
  branch: master

  URI: git://git.yoctoproject.org/meta-security
  branch: master

  URI: git://git.yoctoproject.org/meta-virtualization
  branch: master


Source code
===========

git://git.enea.com/linux/meta-cgl.git


Maintenance
===========

Maintainers: Enea Linux Team <linux-maintainers@enea.com>


Contributing
============

Contributions and patches can be sent to the Yocto Project mailing
list: yocto@yoctoproject.org"
As a backup alternative the Enea Linux mailing list can be
used: enealinux@lists.enea.com

When sending patches please take a look at the contribution guide available
here: https://wiki.yoctoproject.org/wiki/Contribution_Guidelines


Table of Contents
=================

  I. Adding the cgl layer to your build
 II. Misc
III. Layer specific information
 IV. Specific terms and information


I. Adding the cgl layer to your build
=================================================

In order to use this layer, you need to make the build system aware of
it.

Assuming the cgl layer exists at the top-level of your
yocto build tree, you can add it to the build system by adding the
location of the cgl layer to bblayers.conf, along with any
other layers needed. Adapt the below list to proper format.

  BBLAYERS:

    meta
    meta-cgl
    meta-qt3
    meta-openembedded/meta-networking
    meta-openembedded/meta-filesystems
    meta-openembedded/meta-oe
    meta-openembedded/meta-perl
    meta-yocto
    meta-yocto-bsp
    meta-virtualization
    meta-openclovis
    meta-selinux
    meta-security
    meta-cloud-services/meta-openstack

A BBMASK definition is required because of some recipes duplicate existance:
    BBMASK = "meta-security/recipes-security/libcap-ng|meta-openembedded/meta-oe/recipes-support/multipath-tools"


II. Misc
========

The meta-cgl layer tries to offer CGL compliant packages to be used for
a Linux distribution.


III. Layer specific information
==============================

The layer contains a core package group (packagegroup-cgl.bb) that
should aggregate all the other available package groups.
The recommandation is to group all CGL compliant features into specific
package groups.

An CGL compliant Linux image is also available into the layer. Its use
is to facilitate the development of a CGL compliant OS.
The core image name is: core-image-cgl.bb


IV. Specific terms and information
==================================

    HA(high availability) technology - refers to a system or component
that is continuously operational for a long length of time.
    Standard interface - represents a joint place of two systems or
subsystems that has a previously agreed  upon form so that two systems
may be readily connected together.
    Service interface - a programatic interface that tries to achive
interoperability. It enables users to describe independently of a platform
or programming language operations required in the application system at
a later stage.
    Interface - shared boundary or connection between two dissimilar
objects, devices or systems.

    Users of this layer might experience a problem with openipmi package, if this happens then this
package can be removed from packagegroup-cgl-middleware.bb package group and exclude it from the
image used for building a CGL compliant image.
    The latest tested head for the depending layers were:
        poky:                   bb00d83675a1293ee8d7a3ac22cf01243fa2397b
        meta-cloud-services:    a06e28ced8f622dbe6d6fbd9bea20b215d8ac938
        meta-openclovis:        83b1f76a75266743dc9eb0238039d5b973ad8ac0
        meta-qt3:               3016129d90b7ac8517a5227d819f10ad417b5b45
        meta-security:          b3f08c7b2bdf1bea28b081319d7c135af45f39e3
        meta-selinux:           1699b56fd801f0194b708b4a1d9d95a831a3bbe4
        meta-virtualization:    b94455174264240bf8519e4148ea5f1fb38d55c6
    The machine for which this layer was tested are: 'qemuppc' and 'p2020rdb'. The latest tested head
for meta-fsl-ppc layer is:      d953212ae5936a7d969d13801b0c2c1eb65cee6f
